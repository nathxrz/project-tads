spring.application.name=nathalia_tads

# Datasource Configuration
# Conexão com MariaDB no Docker
spring.datasource.url=jdbc:mariadb://localhost:3306/nathalia_tads?createDatabaseIfNotExist=true
spring.datasource.username=mariadb
# A senha do MariaDB é configurada com a variável de ambiente ou com o valor diretamente
spring.datasource.password=${MARIADB_SECRET:mariadb}

# JPA
# Hibernate ddl auto (create, create-drop, update, none): com "update" o esquema do database é automaticamente
# modificado, conforme as anotações JPA nas entidades Java da camada de modelo.
spring.jpa.hibernate.ddl-auto=update
# JPA-SQL (as propriedades abaixo instruem o Spring Boot a imprimir o SQL e formatá-lo)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# spring-data-rest
spring.data.rest.basePath=/api

# adia a inicialização da execução dos scripts para depois da criação dos EntityManager do JPA (o padrão é o script executar antes do JPA)
spring.jpa.defer-datasource-initialization=false
# ordena a execução dos scripts do arquivo data.sql (Valor na primeira execução always. Lembre de colocar para never depois da primeira execução)
spring.sql.init.mode=never


# Secret para geração do token JWT
# As chaves indicam ao Spring Boot para ele procurar por uma variável de ambiente a partir do valor que está nela.
# Após os : é o valor que ele utiliza caso não localize a variável de ambiente. No caso, procura por JWT_SECRET, senão, aplica 12345678
api.security.token.secret=${JWT_SECRET:12345678}